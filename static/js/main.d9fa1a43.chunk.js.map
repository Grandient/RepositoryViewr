{"version":3,"sources":["App.js","BarChart.js","serviceWorker.js","index.js"],"names":["Octokit","require","octokit","OWNER","REPO","hashes","chart","validate","owner","repo","auth","p1","username","check","Promise","resolve","reject","users","getByUsername","then","value","err","val","type","catch","checkUser","p2","request","console","log","checkRepo","p3","repos","listCommits","checkAuth","all","msgs","errs","Selected","useState","commits","updateCommits","loaded","updateLoad","useEffect","data","forEach","hash","push","sha","finally","date","moment","commit","author","format","parents","login","files","stats","Chart","document","getElementById","labels","datasets","label","backgroundColor","options","legend","display","title","text","table","id","CommitTable","className","highlight","key","str","current","style","updateCommit","map","file","name","filename","changes","max","cScale","scale","scaleChrome","domain","sort","a","b","points","colors","length","slice","update","updateChart","props","useDynamicRefs","getRef","setRef","Table","Header","Row","HeaderCell","Body","ref","toString","onMouseEnter","e","onMouseLeave","onClick","Cell","total","additions","deletions","App","setOwner","setRepo","setAuth","setCheck","error","setError","notSelected","Form","Field","placeholder","onChange","target","Button","result","hasError","res","errors","filter","x","message","Message","href","negative","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9fa1a43.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Form , Button, Message } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { createChart, updateChart, clearChart} from './BarChart';\nimport moment from 'moment';\nimport useDynamicRefs from 'use-dynamic-refs';\nconst { Octokit } = require(\"@octokit/rest\");\n\nvar octokit = null\nvar OWNER = null;\nvar REPO = null;\nvar hashes = [];\nvar chart = null;\n\nfunction validate(owner, repo, auth){\n  let p1 = checkUser(owner)\n  let p2 = checkRepo(owner, repo)\n  let p3 = checkAuth(owner, repo, auth)\n  let res = Promise.all([p1, p2, p3])\n    .then(msgs =>{\n        console.log(msgs)\n        return msgs\n    })\n    .catch(errs => {\n      console.log(errs)\n      return errs;\n    })\n  return res;\n}\n\nfunction checkRepo(username, repo){\n  let check = new Octokit();\n  let p2 = new Promise((resolve, reject) => \n  check.request(`GET /repos/${username}/${repo}`)\n  .then(() => {\n    resolve({value: true, err: \"\", val: repo, type: \"Repository\"})\n  })\n  .catch(err => {\n    console.log(err)\n    reject({value: false, err: err, val: repo, type: \"Repository\"})\n  })\n  ).catch(err => {\n    return err;\n  })\n  return p2;\n}\n\nfunction checkUser(username){\n  let check = new Octokit();\n  let p1 = new Promise((resolve, reject) => check.users.getByUsername({\n    username,\n  })\n  .then(() => {\n    resolve({value: true, err: \"\", val: username, type: \"Author\"})\n  })\n  .catch(err => {\n    reject({value: false, err: err, val: username, type: \"Author\"})\n  })\n  ).catch(err => {\n    return err;\n  })\n  return p1;\n}\n\nfunction checkAuth(owner, repo ,auth){\n  let check = new Octokit({auth: auth});\n  check.log = console;\n  let p3 = new Promise((resolve, reject) => check.repos.listCommits({\n    owner,\n    repo,\n  })\n  .then(() => {\n    resolve({value: true, err: \"\", val: auth, type: \"Authenicator\"})\n  })\n  .catch(err => {\n    reject({value: false, err: err, val: auth, type: \"Authenicator\"})\n  })\n  ).catch(err => {\n    return err;\n  })\n  return p3;\n}\n\nfunction App(){\n  let [owner, setOwner] = useState('');\n  let [repo, setRepo] = useState('');\n  let [auth, setAuth] = useState('');\n  let [check, setCheck] = useState(false);\n  let [error, setError] = useState(null)\n\n  let notSelected = (\n    <div id=\"info\">\n      <Form>\n        <Form.Field>\n          <label>Author</label>\n          <input placeholder='Ex: facebook' onChange={(e) => setOwner(e.target.value)}/>\n        </Form.Field>\n        <Form.Field>\n          <label>Repository</label>\n          <input placeholder='Ex: react' onChange={(e) => setRepo(e.target.value)}/>\n        </Form.Field>\n        <Form.Field>\n          <label>Authenicator</label>\n          <input placeholder='Ex: 0e181d0dffd8dd0e6359d......' onChange={(e) => setAuth(e.target.value)}/>\n        </Form.Field>\n        <Button onClick={async() => {\n          let result = await validate(owner, repo, auth);\n          let hasError = false;\n          console.log(result)\n          result.forEach(res => {\n            if(res.value == false){\n              hasError = true;\n            }\n          })\n\n          let errors = result.filter(x => x.value == false).map(res => \n            <div>\n              {res.type + \": \" + res.err.message}\n              <br></br>\n            </div> \n          )\n          if(!hasError){\n            OWNER = result[0].val\n            REPO = result[1].val\n            let auth = result[2].val\n            octokit = new Octokit({auth: auth});\n            setCheck(true) \n          } else {\n            setError(errors)\n          } \n        }}>Submit</Button>\n        <Message>\n        <Message.Header>How to get authenticated.</Message.Header>\n        Unfortunately Github limits the amount of API calls from unauthenticated users so in order for this application to work correctly you need your PAC (Personal Access Token)\n        <br></br>\n        <a href=\"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">\n          Github Documentation\n        </a>\n        </Message>\n        <Message negative>\n        <Message.Header negative>Errors</Message.Header>\n        <p>{error}</p>\n        </Message>\n      </Form>\n    </div>\n\n  )\n  return (\n    <div>\n      <h1 className=\"title\">Repository Viewer</h1>\n      {check ? <Selected/> : notSelected}\n    </div>\n\n  )\n}\n\nfunction Selected() {\n  let [commits, updateCommits] = useState([]);\n  let [loaded, updateLoad] = useState(false);\n  \n  useEffect(() => {\n    let owner = OWNER;\n    let repo = REPO;\n    octokit.repos.listCommits({\n      owner,\n      repo,\n    })\n    .then(({data}) => {\n      data.forEach(function(hash){\n        hashes.push(hash.sha)\n      })\n    })\n    .finally(() => {\n       hashes.forEach(function(hash){\n        octokit.request(`GET /repos/${owner}/${repo}/commits/${hash}`)\n        .then(({data}) => {\n          updateCommits(commits => [...commits, {date: moment(data.commit.author.date).format(\"MMM Do YY\"), parents: data.parents, author: data.author.login,files:data.files, stats:data.stats}])\n        })\n        .finally(() => {\n          updateLoad(true)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      })\n    })\n\n    chart = createChart(chart);\n    return () => {\n      \n    }\n  }, [])\n\n  let table = \n    <div id=\"table\">\n      <CommitTable commits={commits}/>\n    </div>\n\n  return (\n    <div className=\"mainContainer\">\n      {loaded ? table : null}\n      <div>\n        <canvas id=\"canvas\"></canvas>\n      </div>\n    </div>\n  );\n}\n\n\nfunction highlight(key, str){\n  if(str == \"In\"){\n    key.current.style.backgroundColor = \"lightgray\";\n  } else {\n    key.current.style.backgroundColor = \"white\";\n  }\n}\n\nfunction updateCommit(commit){\n  console.log(commit)\n  let data = commit.files.map((file) => {\n    return {name: file.filename, changes: file.changes}\n  })\n  console.log(data)\n  updateChart(data, chart)\n}\n\nfunction CommitTable(props) {\n  let [getRef, setRef] = useDynamicRefs();\n\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Author</Table.HeaderCell>\n          <Table.HeaderCell>Date</Table.HeaderCell>\n          <Table.HeaderCell>Changes</Table.HeaderCell>\n          <Table.HeaderCell>Additions</Table.HeaderCell>\n          <Table.HeaderCell>Deletions</Table.HeaderCell>\n          <Table.HeaderCell>Files</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n      {props.commits.map((commit, key) => \n          <tr key={key} ref={setRef(key.toString())} \n            onMouseEnter={(e) => highlight(getRef(key.toString()), \"In\")} \n            onMouseLeave={(e) => highlight(getRef(key.toString()), \"Out\")}\n            onClick={() => updateCommit(commit)}>\n            <Table.Cell>{commit.author}</Table.Cell>\n            <Table.Cell>{commit.date}</Table.Cell>\n            <Table.Cell>{commit.stats.total}</Table.Cell>\n            <Table.Cell>{commit.stats.additions}</Table.Cell>\n            <Table.Cell>{commit.stats.deletions}</Table.Cell>\n            <Table.Cell>{commit.files.length}</Table.Cell>\n          </tr>\n      )}\n\n    </Table.Body>\n    </Table>\n  )\n}\n\n\nexport default App;\n","import Chart from 'chart.js';\r\nimport * as scale from 'd3-scale';\r\nimport * as scaleChrome from 'd3-scale-chromatic';\r\n\r\nexport function createChart(chart){\r\n    chart = new Chart(document.getElementById(\"canvas\"), {\r\n      type: 'bar',\r\n      data: {\r\n        labels: null,\r\n        datasets: [\r\n          {\r\n            label: \"Number of changes\",\r\n            backgroundColor: \"#FFFFFF\",\r\n            data: null\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: 'File Changes'\r\n        }\r\n      }\r\n    });\r\n    return chart;\r\n  }\r\n\r\nexport function clearChart(chart){\r\n  chart.data.labels = []\r\n  chart.data.datasets.forEach((dataset) => {\r\n      dataset.data = [];\r\n  });\r\n  chart.update();\r\n  return chart;\r\n}\r\n  \r\n  \r\nexport function updateChart(data, chart) {\r\n  let max = 0;\r\n  data.forEach((file) => {\r\n    if(file.changes > max) max = file.changes;\r\n  })\r\n  \r\n  console.log(max);\r\n  var cScale = scale.scaleSequential(scaleChrome.interpolateViridis).domain([0,max]); \r\n  data.sort(function(a,b) {\r\n    return b.changes - a.changes;\r\n  });\r\n  \r\n  let labels = [];\r\n  let points = [];\r\n  let colors = [];\r\n  \r\n  data.forEach(function(file) {\r\n    if(file.name.length > 20){\r\n      labels.push(file.name.slice(file.name.length-20,file.name.length))\r\n    } else {\r\n      labels.push(file.name)\r\n    }\r\n    points.push(file.changes)\r\n    colors.push(cScale(file.changes))\r\n  })\r\n  chart.data.datasets[0].backgroundColor = colors;\r\n  chart.data.datasets[0].data = points;\r\n  chart.data.labels = labels;\r\n  chart.update();\r\n  return chart;\r\n}\r\n\r\n  \r\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["BarChart.js","LineChart.js","App.js","serviceWorker.js","index.js"],"names":["createChart","chart","Chart","document","getElementById","type","data","labels","datasets","label","backgroundColor","options","legend","display","title","text","createLineChart","fill","compare","a","b","A","moment","date","toDate","B","comparison","updateLineChart","sort","normalizedData","forEach","commit","hasOwnProperty","stats","total","points","colors","dates","Object","keys","max","cScale","scale","scaleChrome","domain","push","update","example","require","Octokit","octokit","OWNER","REPO","hashes","lineChart","validate","owner","repo","auth","p1","username","check","Promise","resolve","reject","users","getByUsername","then","value","err","val","catch","checkUser","p2","request","console","log","checkRepo","p3","repos","listCommits","checkAuth","all","msgs","errs","Example","props","commits","table","id","CommitTable","useEffect","className","Selected","useState","updateCommits","loaded","updateLoad","hash","sha","finally","author","format","parents","login","files","Message","Button","onClick","load","highlight","key","str","current","style","updateCommit","file","changes","name","length","slice","updateChart","map","filename","getCommitData","newHashes","newCommits","oldCommits","oldestParentSha","useDynamicRefs","getRef","setRef","Table","Header","Row","HeaderCell","Body","ref","toString","onMouseEnter","onMouseLeave","Cell","additions","deletions","App","setOwner","setRepo","setAuth","setCheck","error","setError","isError","setIsError","isExample","setIsExample","notSelected","Form","Field","placeholder","onChange","e","target","result","hasError","res","errors","filter","x","message","href","List","as","Item","negative","alignContent","margin","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.752c2ca4.chunk.js","sourcesContent":["import Chart from 'chart.js';\r\nimport * as scale from 'd3-scale';\r\nimport * as scaleChrome from 'd3-scale-chromatic';\r\n\r\nexport function createChart(chart){\r\n    chart = new Chart(document.getElementById(\"canvas\"), {\r\n      type: 'bar',\r\n      data: {\r\n        labels: null,\r\n        datasets: [\r\n          {\r\n            label: \"Number of changes\",\r\n            backgroundColor: \"#FFFFFF\",\r\n            data: null\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: 'File Changes'\r\n        }\r\n      }\r\n    });\r\n    return chart;\r\n  }\r\n\r\nexport function clearChart(chart){\r\n  chart.data.labels = []\r\n  chart.data.datasets.forEach((dataset) => {\r\n      dataset.data = [];\r\n  });\r\n  chart.update();\r\n  return chart;\r\n}\r\n  \r\n  \r\nexport function updateChart(data, chart) {\r\n  let max = 0;\r\n  data.forEach((file) => {\r\n    if(file.changes > max) max = file.changes;\r\n  })\r\n  \r\n  var cScale = scale.scaleSequential(scaleChrome.interpolateViridis).domain([0,max]); \r\n  data.sort(function(a,b) {\r\n    return b.changes - a.changes;\r\n  });\r\n  \r\n  let labels = [];\r\n  let points = [];\r\n  let colors = [];\r\n  \r\n  data.forEach(function(file) {\r\n    if(file.name.length > 20){\r\n      labels.push(file.name.slice(file.name.length-20,file.name.length))\r\n    } else {\r\n      labels.push(file.name)\r\n    }\r\n    points.push(file.changes)\r\n    colors.push(cScale(file.changes))\r\n  })\r\n  chart.data.datasets[0].backgroundColor = colors;\r\n  chart.data.datasets[0].data = points;\r\n  chart.data.labels = labels;\r\n  chart.update();\r\n  return chart;\r\n}\r\n\r\n  \r\n  ","import Chart from 'chart.js';\r\nimport * as scale from 'd3-scale';\r\nimport * as scaleChrome from 'd3-scale-chromatic';\r\nimport moment from 'moment';\r\n\r\nexport function createLineChart(chart){\r\n    chart = new Chart(document.getElementById(\"canvas2\"), {\r\n      type: 'line',\r\n      data: {\r\n        labels: null,\r\n        datasets: [\r\n          {\r\n            label: \"Total Changes Per Day\",\r\n            backgroundColor: \"white\",\r\n            data: null,\r\n            fill: false\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Changes'\r\n        }\r\n      }\r\n    });\r\n    return chart;\r\n}\r\n\r\nexport function clearLineChart(chart){\r\n    chart.data.labels = []\r\n    chart.data.datasets.forEach((dataset) => {\r\n        dataset.data = [];\r\n    });\r\n    chart.update();\r\n    return chart;\r\n}\r\n    \r\nfunction compare(a,b){\r\n    let A = moment(a.date).toDate();\r\n    let B = moment(b.date).toDate();\r\n    let comparison = 0;\r\n    if (A > B){ comparison = 1};\r\n    if (B > A){ comparison = -1};\r\n    return comparison; \r\n}\r\n    \r\nexport function updateLineChart(data, chart) {\r\n    data = data.sort(compare);\r\n    let normalizedData = {}\r\n    data.forEach(function(commit) {\r\n        if(normalizedData.hasOwnProperty(commit.date)){\r\n            normalizedData[commit.date] += commit.stats.total;\r\n        } else {\r\n            normalizedData[commit.date] = commit.stats.total;\r\n        }\r\n    })\r\n    let labels = [];\r\n    let points = [];\r\n    let colors = [];\r\n\r\n    const dates = Object.keys(normalizedData)\r\n    let max = 0;\r\n    for (const date of dates) {\r\n        if(max < normalizedData[date]){\r\n            max = normalizedData[date];\r\n        }\r\n    }\r\n    var cScale = scale.scaleSequential(scaleChrome.interpolateViridis).domain([0,max]); \r\n\r\n    for (const date of dates) {\r\n        labels.push(date)\r\n        points.push(normalizedData[date])\r\n        colors.push(cScale(normalizedData[date]))\r\n    }\r\n\r\n    \r\n    chart.data.datasets[0].backgroundColor = colors;\r\n    chart.data.datasets[0].data = points;\r\n    chart.data.labels = labels;\r\n    chart.update();\r\n    return chart;\r\n}\r\n  \r\n    ","import React, { useState, useEffect } from 'react';\nimport { Table, Form , Button, Message, List } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { createChart, updateChart, clearChart} from './BarChart';\nimport { createLineChart, updateLineChart, clearLineChart} from './LineChart';\nimport moment from 'moment';\nimport useDynamicRefs from 'use-dynamic-refs';\nconst example = require('./Example.json');\nconst { Octokit } = require(\"@octokit/rest\");\n\nvar octokit = null\nvar OWNER = null;\nvar REPO = null;\nvar hashes = [];\nvar chart = null;\nvar lineChart = null;\n\nfunction validate(owner, repo, auth){\n  let p1 = checkUser(owner)\n  let p2 = checkRepo(owner, repo)\n  let p3 = checkAuth(owner, repo, auth)\n  let res = Promise.all([p1, p2, p3])\n    .then(msgs =>{\n        console.log(msgs)\n        return msgs\n    })\n    .catch(errs => {\n      console.log(errs)\n      return errs;\n    })\n  return res;\n}\n\nfunction checkRepo(username, repo){\n  let check = new Octokit();\n  let p2 = new Promise((resolve, reject) => \n  check.request(`GET /repos/${username}/${repo}`)\n  .then(() => {\n    resolve({value: true, err: \"\", val: repo, type: \"Repository\"})\n  })\n  .catch(err => {\n    console.log(err)\n    reject({value: false, err: err, val: repo, type: \"Repository\"})\n  })\n  ).catch(err => {\n    return err;\n  })\n  return p2;\n}\n\nfunction checkUser(username){\n  let check = new Octokit();\n  let p1 = new Promise((resolve, reject) => check.users.getByUsername({\n    username,\n  })\n  .then(() => {\n    resolve({value: true, err: \"\", val: username, type: \"Author\"})\n  })\n  .catch(err => {\n    reject({value: false, err: err, val: username, type: \"Author\"})\n  })\n  ).catch(err => {\n    return err;\n  })\n  return p1;\n}\n\nfunction checkAuth(owner, repo ,auth){\n  let check = new Octokit({auth: auth});\n  check.log = console;\n  let p3 = new Promise((resolve, reject) => check.repos.listCommits({\n    owner,\n    repo,\n  })\n  .then(() => {\n    resolve({value: true, err: \"\", val: auth, type: \"Authenicator\"})\n  })\n  .catch(err => {\n    reject({value: false, err: err, val: auth, type: \"Authenicator\"})\n  })\n  ).catch(err => {\n    return err;\n  })\n  return p3;\n}\n\nfunction App(){\n  let [owner, setOwner] = useState('');\n  let [repo, setRepo] = useState('');\n  let [auth, setAuth] = useState('');\n  let [check, setCheck] = useState(false);\n  let [error, setError] = useState(null);\n  let [isError, setIsError] = useState(false);\n  let [isExample, setIsExample] = useState(false);\n\n  let notSelected = (\n    <div id=\"info\">\n      <Form>\n        <Message>\n        <Form.Field>\n          <label>Author</label>\n          <input placeholder='Ex: facebook' onChange={(e) => setOwner(e.target.value)}/>\n        </Form.Field>\n        <Form.Field>\n          <label>Repository</label>\n          <input placeholder='Ex: react' onChange={(e) => setRepo(e.target.value)}/>\n        </Form.Field>\n        <Form.Field>\n          <label>Authenicator</label>\n          <input placeholder='Ex: 0e181d0dffd8dd0e6359d......' onChange={(e) => setAuth(e.target.value)}/>\n        </Form.Field>\n        <Button onClick={async() => {\n          let result = await validate(owner, repo, auth);\n          let hasError = false;\n          console.log(result)\n          result.forEach(res => {\n            if(res.value == false){\n              hasError = true;\n            }\n          })\n\n          let errors = result.filter(x => x.value == false).map(res => \n            <div>\n              {res.type + \": \" + res.err.message}\n              <br></br>\n            </div> \n          )\n          if(!hasError){\n            OWNER = result[0].val\n            REPO = result[1].val\n            let auth = result[2].val\n            octokit = new Octokit({auth: auth});\n            setCheck(true) \n            setIsError(false)\n          } else {\n            setError(errors)\n            setIsError(true)\n          } \n        }}>Submit</Button>\n        </Message>\n        <Message>\n        <Message.Header>How to get authenticated.</Message.Header>\n        Unfortunately Github limits the amount of API calls from unauthenticated users so in order for this application to work correctly you need your PAT (Personal Access Token)\n        <br></br>\n        <a href=\"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">\n          Github Documentation\n        </a>\n        <br></br>\n        Perimissions Required:\n        <List as='ul'>\n        <List.Item as='li'>repo:status</List.Item>\n        <List.Item as='li'>public_repo</List.Item>\n        </List>\n        </Message>\n        {isError ?\n        <Message negative>\n        <Message.Header negative>Errors</Message.Header>\n        <p>{error}</p>\n        </Message>\n       : null}\n       <Message>\n         Don't wanna make an authenicator just to try it out? Here is an example with just a click of a button!\n         <br></br>\n         <Button onClick={() => setIsExample(true)}>Example</Button>\n       </Message>\n      </Form>\n    </div>\n\n  )\n  return (\n    <div>\n      <h1 className=\"title\">Repository Viewer</h1>\n      {check ? <Selected/> : null}\n      {isExample ? \n      <Button style={{display: 'flex', alignContent: 'center', margin: \"auto\", fontSize: \"28px\"}} onClick={() => setIsExample(false)}>Back</Button>\n      : null}\n      {isExample ? <Example /> : null}\n      {(check == true || isExample == true) ? null : notSelected}\n    </div>\n\n  )\n}\n\nfunction Example(props){\n  let commits = example;\n  let table = \n  <div id=\"table\">\n    <CommitTable commits={commits}/>\n  </div>\n\n  useEffect(() => {\n    chart = createChart(chart);\n    lineChart = createLineChart(lineChart);\n    lineChart = updateLineChart(commits, lineChart);\n    return () => {\n    }\n  }, [])\n\n  return (\n    <div className=\"mainContainer\">\n      {table}\n      <div>\n        <canvas id=\"canvas\"></canvas>\n        <canvas id=\"canvas2\"></canvas>\n      </div>\n    </div>\n  );\n}\n\n\nfunction Selected() {\n  let [commits, updateCommits] = useState([]);\n  let [loaded, updateLoad] = useState(false);\n\n  useEffect(() => {\n    let owner = OWNER;\n    let repo = REPO;\n    octokit.repos.listCommits({\n      owner,\n      repo,\n    })\n    .then(({data}) => {\n      data.forEach(function(hash){\n        hashes.push(hash.sha)\n      })\n    })\n    .finally(() => {\n       hashes.forEach(function(hash){\n        octokit.request(`GET /repos/${owner}/${repo}/commits/${hash}`)\n        .then(({data}) => {\n          updateCommits(commits => [...commits, {date: moment(data.commit.author.date).format(\"MMM DD YYYY\"), parents: data.parents, author: data.author.login,files:data.files, stats:data.stats}])\n        })\n        .finally(() => {\n          updateLoad(true)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      })\n    })\n\n    chart = createChart(chart);\n    lineChart = createLineChart(lineChart);\n    return () => {\n      \n    }\n  }, [])\n\n  let table = \n    <div id=\"table\">\n      <CommitTable commits={commits} example={true}/>\n    </div>\n\n  return (\n    <div className=\"mainContainer\">\n      {loaded ? table : null}\n      <div>\n        <canvas id=\"canvas\"></canvas>\n        <Message>\n          <Button onClick={() => load(commits)}>Load More</Button>\n          <Button onClick={() => load(commits)}>Sort</Button>\n        </Message>\n        <canvas id=\"canvas2\"></canvas>\n      </div>\n    </div>\n  );\n}\n\n\nfunction highlight(key, str){\n  if(str == \"In\"){\n    key.current.style.backgroundColor = \"lightgray\";\n  } else {\n    key.current.style.backgroundColor = \"white\";\n  }\n}\n\nfunction updateCommit(commit, key){\n  let data = commit.files.map((file) => {\n    return {name: file.filename, changes: file.changes}\n  })\n  updateChart(data, chart)\n\n  if(key.current.style.backgroundColor == \"gray\"){\n    key.current.style.backgroundColor = \"darkgray\";\n  } else {\n    key.current.style.backgroundColor = \"gray\";\n  }\n}\n\nfunction getCommitData(sha){\n  let owner = OWNER;\n  let repo = REPO;\n  let newHashes = [];\n  let newCommits = [];\n  let a = octokit.repos.listCommits({\n    owner,\n    repo,\n    sha\n  })\n  .then(({data}) => {\n    data.forEach(function(hash){\n      newHashes.push(hash.sha)\n    })\n  })\n  .finally(() => {\n     newHashes.forEach(function(hash){\n      octokit.request(`GET /repos/${owner}/${repo}/commits/${hash}`)\n      .then(({data}) => {\n        return newCommits = [...newCommits, {date: moment(data.commit.author.date).format(\"MMM Do YY\"), parents: data.parents, author: data.author.login,files:data.files, stats:data.stats}]\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    })\n  })\n\n  return a;\n}\n\nasync function load(oldCommits){\n  let oldestParentSha = oldCommits[oldCommits.length-1].parents[0].sha;\n  let newCommits = await getCommitData(oldestParentSha)\n  //console.log(newCommits)\n}\n\nfunction CommitTable(props) {\n  let [getRef, setRef] = useDynamicRefs();\n  if(props.example == false){\n    lineChart = updateLineChart(props.commits, lineChart);\n  }\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Author</Table.HeaderCell>\n          <Table.HeaderCell>Date</Table.HeaderCell>\n          <Table.HeaderCell>Changes</Table.HeaderCell>\n          <Table.HeaderCell>Additions</Table.HeaderCell>\n          <Table.HeaderCell>Deletions</Table.HeaderCell>\n          <Table.HeaderCell>Files</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n      {props.commits.map((commit, key) => \n          <tr key={key} ref={setRef(key.toString())} \n            onMouseEnter={() => highlight(getRef(key.toString()), \"In\")} \n            onMouseLeave={() => highlight(getRef(key.toString()), \"Out\")}\n            onClick={() => updateCommit(commit, getRef(key.toString()))}>\n            <Table.Cell>{commit.author}</Table.Cell>\n            <Table.Cell>{commit.date}</Table.Cell>\n            <Table.Cell>{commit.stats.total}</Table.Cell>\n            <Table.Cell>{commit.stats.additions}</Table.Cell>\n            <Table.Cell>{commit.stats.deletions}</Table.Cell>\n            <Table.Cell>{commit.files.length}</Table.Cell>\n          </tr>\n      )}\n\n    </Table.Body>\n    </Table>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}